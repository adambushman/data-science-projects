---
title: "Breast Cancer Classification"
description: "Leveraging decision trees in {scikitlearn} to classify breast cancer"
author: "Adam Bushman"
format: html
---


# Introduction

Data sourced from Kaggle,
[Breast Cancer Prediction](https://www.kaggle.com/datasets/fatemehmehrparvar/breast-cancer-prediction), accessed February 19th, 2024. Downloaded extracts are saved within this repository and loaded for purpose of modeling.


# Analysis prep

```{python}

# Loading libraries
import pandas as pd
import numpy as np
from sklearn import tree
from pandas_summary import DataFrameSummary

# Load data into session
cancer = pd.read_csv("../breast-cancer-dataset.csv")

```

# Basic data exploration

```{python}

# Understand fields
cancer_summary = DataFrameSummary(cancer)
cancer_summary.summary()

```

# Clean dataset

```{python}

cancer.columns = ["Pat_Id", "Year", "Age", "Menopause", "Tumor_Size_Cm", "Inv_Nodes", "Breast", "Metastasis", "Breast_Quadrant", "History", "Diagnosis_Result"]

def replace_hash(col):
    return col.replace("#",np.nan)

cancer_clean = cancer.apply(replace_hash, axis=0)

cancer_clean["Tumor_Size_Cm"] = cancer_clean["Tumor_Size_Cm"].apply(pd.to_numeric)

# There are "#" codes in the data to figure out...

```


# Model prep

```{python}

# Defining a split

# Training and testing sets

```

# Defining a model, recipe, and workflow

```{python}

# Model

# Recipe

# Workflow

```

# Setting up the tuning details

```{python}

# Tuning grid

# Setting up the tuning

```


# Exploring the results

```{python}

# Extracting results from the tuned grid

# Plot accuracy metric

```

# Constructing a model with max depth of 4

```{python}

# Official model

# Official workflow

# Fitting the training data

```

# Evaluating the model

```{python}

# Predicting the testing data based on training

# Assembling results 

# Comparing results

```
